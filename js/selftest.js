window.MIEC_SELFTEST=(function(){function t(n,f){return Promise.resolve().then(f).then(m=>({name:n,state:'ok',msg:m||'ok'})).catch(e=>({name:n,state:'err',msg:e&&e.message?e.message:String(e)}))}function w(n,m){return Promise.resolve({name:n,state:'warn',msg:m})}return{async run(){const c=[];c.push(await t('Config carregada',()=>{if(!window.MIEC_CONFIG) throw new Error('MIEC_CONFIG ausente');return 'OK'}));c.push(await t('Ordem de scripts',()=>{const req=['config.js','status-hud.js','selftest.js','safe-init.js'];const tags=Array.from(document.querySelectorAll('script[src]')).map(s=>s.getAttribute('src'));const idx=req.map(r=>tags.findIndex(x=>x&&x.includes(r)));if(idx.some(i=>i<0)) throw new Error('Faltam scripts: '+JSON.stringify({idx,tags}));const ord=idx.slice().sort((a,b)=>a-b);if(JSON.stringify(idx)!==JSON.stringify(ord)) throw new Error('Sequência fora de ordem: '+idx.join(','));return 'OK'}));c.push(await t('DOM pronto',()=>{if(document.readyState!=='complete'&&document.readyState!=='interactive') throw new Error('DOM não pronto');return 'OK'}));c.push(await t('localStorage leitura/escrita',()=>{const k='__miec_test__';const v=String(Date.now());localStorage.setItem(k,v);const r=localStorage.getItem(k);localStorage.removeItem(k);if(r!==v) throw new Error('Falha R/W localStorage');return 'OK'}));c.push(await w('Supabase (ignorado em sanity)','REQUIRE_AUTH=false, AUTO_SYNC=false'));return c}}})();